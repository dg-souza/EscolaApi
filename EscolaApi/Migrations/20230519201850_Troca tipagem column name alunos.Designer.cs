// <auto-generated />
using EscolaApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EscolaApi.Migrations
{
    [DbContext(typeof(EscolaContext))]
    [Migration("20230519201850_Troca tipagem column name alunos")]
    partial class Trocatipagemcolumnnamealunos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EscolaApi.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EscolaId")
                        .IsUnique();

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("EscolaApi.Models.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GradeCurricularId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GradeCurricularId");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("EscolaApi.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("EscolaApi.Models.Escola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("Escolas");
                });

            modelBuilder.Entity("EscolaApi.Models.GradeCurricular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId")
                        .IsUnique();

                    b.ToTable("GradeCurricular");
                });

            modelBuilder.Entity("EscolaApi.Models.Aluno", b =>
                {
                    b.HasOne("EscolaApi.Models.Escola", "Escola")
                        .WithOne("Aluno")
                        .HasForeignKey("EscolaApi.Models.Aluno", "EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("EscolaApi.Models.Disciplina", b =>
                {
                    b.HasOne("EscolaApi.Models.GradeCurricular", "GradeCurricular")
                        .WithMany("Disciplina")
                        .HasForeignKey("GradeCurricularId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GradeCurricular");
                });

            modelBuilder.Entity("EscolaApi.Models.Escola", b =>
                {
                    b.HasOne("EscolaApi.Models.Endereco", "Endereco")
                        .WithOne("Escola")
                        .HasForeignKey("EscolaApi.Models.Escola", "EnderecoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("EscolaApi.Models.GradeCurricular", b =>
                {
                    b.HasOne("EscolaApi.Models.Aluno", "Aluno")
                        .WithOne("GradeCurricular")
                        .HasForeignKey("EscolaApi.Models.GradeCurricular", "AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("EscolaApi.Models.Aluno", b =>
                {
                    b.Navigation("GradeCurricular")
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaApi.Models.Endereco", b =>
                {
                    b.Navigation("Escola")
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaApi.Models.Escola", b =>
                {
                    b.Navigation("Aluno")
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaApi.Models.GradeCurricular", b =>
                {
                    b.Navigation("Disciplina");
                });
#pragma warning restore 612, 618
        }
    }
}
